[workspace]
members = [".", "metadata"]

[package]
name = "cargo-contract"
version = "0.16.0"
authors = ["Parity Technologies <admin@parity.io>"]
build = "build.rs"
edition = "2018"

license = "GPL-3.0"
readme = "README.md"
repository = "https://github.com/paritytech/cargo-contract"
documentation = "https://docs.substrate.io/tutorials/v3/ink-workshop/pt1/"
homepage = "https://www.parity.io/"
description = "Setup and deployment tool for developing Wasm based smart contracts via ink!"
keywords = ["wasm", "parity", "webassembly", "blockchain", "edsl"]
categories = ["command-line-utilities", "development-tools::build-utils", "development-tools::cargo-plugins"]
include = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE", "build.rs", "templates"]

[dependencies]
env_logger = "0.9.0"
anyhow = "1.0.51"
structopt = "0.3.25"
log = "0.4.14"
heck = "0.3.3"
zip = { version = "0.5.13", default-features = false }
parity-wasm = "0.42.2"
cargo_metadata = "0.14.1"
codec = { package = "parity-scale-codec", version = "2.1", features = ["derive"] }
which = "4.2.2"
colored = "2.0.0"
toml = "0.5.8"
rustc_version = "0.4.0"
blake2 = "0.9.2"
contract-metadata = { version = "0.5.0", path = "./metadata" }
semver = { version = "1.0.4", features = ["serde"] }
serde = { version = "1.0.130", default-features = false, features = ["derive"] }
serde_json = "1.0.72"
tempfile = "3.2.0"
url = { version = "2.2.2", features = ["serde"] }
impl-serde = "0.3.2"
regex = "1.4"

# dependencies for extrinsics (deploying and calling a contract)
async-std = { version = "1.10.0", features = ["attributes", "tokio1"] }
ink_metadata = { version = "3.0.0-rc7", default-features = false, features = ["derive"] }
ink_env = { version = "3.0.0-rc7", default-features = false }
scale-info = { version = "1.0.0", default-features = false, features = ["derive"] }
sp-arithmetic = { package = "sp-arithmetic", git = "https://github.com/paritytech/substrate/", branch = "master" }
sp-core = { package = "sp-core", git = "https://github.com/paritytech/substrate/", branch = "master" }
sp-keyring = { package = "sp-keyring", git = "https://github.com/paritytech/substrate/", branch = "master" }
sp-runtime = { package = "sp-runtime", git = "https://github.com/paritytech/substrate/", branch = "master" }
pallet-contracts-primitives = { package = "pallet-contracts-primitives", git = "https://github.com/paritytech/substrate/", branch = "master" }
subxt = { git = "https://github.com/paritytech/subxt", branch = "aj-export-transaction-events" }
futures = "0.3.17"
hex = "0.4.3"
jsonrpsee = { version = "0.5.1", features = ["ws-client"] }
nom = "7.0.0"
indexmap = "1.7.0"
thiserror = "1.0.29"
escape8259 = "0.5.1"
itertools = "0.10.1"
bat = { version = "0.18.3", default-features = false, features = ["regex-onig"] }

[build-dependencies]
anyhow = "1.0.51"
zip = { version = "0.5.13", default-features = false }
walkdir = "2.3.2"
substrate-build-script-utils = "3.0.0"
platforms = "1.1.0"

[dev-dependencies]
assert_cmd = "2.0.1"
assert_matches = "1.5.0"
pretty_assertions = "1.0.0"
wabt = "0.10.0"
regex = "1.5.4"
predicates = "2.0.2"

ink_primitives = { version = "3.0.0-rc7" }
ink_storage = { version = "3.0.0-rc7" }
ink_lang = { version = "3.0.0-rc7" }

[features]
# Enable this to execute long running tests, which usually are only run on the CI server
#
# Disabled by default
test-ci-only = []

# Enable this to execute tests which depend on a locally running contracts enabed chain
# e.g.https://github.com/paritytech/canvas-node
integration-tests = []
